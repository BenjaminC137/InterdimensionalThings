@model InterdimensionalThings.Models.ReceiptModel
@{
    ViewData["Title"] = "Order " + Model.ThingsOrder.ID;

    var total = Model.ThingsOrder.ThingsOrderThings.Sum(x => x.Quantity * x.ProductPrice);
    var estimatedShipping = Model.Things.Max(x => x.ShippingDays);
    @*var estimatedShipping = Model.ThingCart.ThingCartThings.Select(x => x.Thing).Max(x => x.ShippingDays);*@
    var shippingOption = this.Model.ThingsOrder.ShippingOption;
}
@inject InterdimensionalThings.Services.SettingsService settings

<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>


<div class="border-standard-free">
<h3>You have requested Things.</h3>
<div class="">
    <dl class="dl-horizontal">
        <dt>
            Email Address
        </dt>
        <dd>
            @Model.ThingsOrder.Email
        </dd>
        <dt>
            Street Address
        </dt>
        <dd>
            @Model.ThingsOrder.StreetAddress
        </dd>
        <dt>
            City
        </dt>
        <dd>
            @Model.ThingsOrder.City
        </dd>
        <dt>
            State
        </dt>
        <dd>
            @Model.ThingsOrder.State
        </dd>
        <dt>
            Zip Code
        </dt>
        <dd>
            @Model.ThingsOrder.ZipCode
        </dd>
        <dt>
            Order Date
        </dt>
        <dd>
            @Model.ThingsOrder.DateCreated
        </dd>
    </dl>
</div>
</div>

<br />
<br />
<div style = "display: inline-block" >
    <table class="cartTable">
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td><h3>Things requested:</h3></td>
        </tr>

        @foreach(var product in Model.ThingsOrder.ThingsOrderThings)
        {
            <tr>
                <td></td>
                <td>@product.ProductPrice.ToString("c")</td>
                <td>(@product.Quantity) @((product.ProductPrice* product.Quantity).ToString("c"))</td>
                <td>@product.ProductName  <img src = "@Model.Things.FirstOrDefault(x => x.Id == product.ProductID).ImagePath" class="d-inline-block align-top image-cart" /> </td>
            </tr>
        }
        <tr style = "background-color: rgb(140,0,57); color: rgb(195, 228, 239)" >
            <td></td>
            <td> Request ID: <b>@Model.ThingsOrder.ID</b></td>
            <td>Total: (@settings.CurrencySymbol @(Math.Round((settings.ExchangeRate * @total), 10))</td>
            <td>
                @if (Model.ThingsOrder.ShippingOption == "portal") { <div>Estimated shipping (@Model.ThingsOrder.ShippingOption) = instant</div>}
                @if (Model.ThingsOrder.ShippingOption == "courier") { <div id="estimatedShipping">Etimated shipping (@Model.ThingsOrder.ShippingOption) = @estimatedShipping Earth Days</div>}
            </td>
        </tr>
    </table>
</div>
@section Scripts
    {
    <script>
        @*var courierTime = @estimatedShipping;
        var option = @shippingOption;

        function shippingChanged(){
            if ($("shippingOption == "courier"){
                $("#estimatedShipping").text(courierTime);
        } else {
                $("#estimatedShipping").text("0");
        }
    }*@

    @*function shippingChanged(){
            if(CheckoutModel.ShippingOption == "portal"){
                  $("#estimatedShipping").text(0);
            }
        }*@

    </script>
}